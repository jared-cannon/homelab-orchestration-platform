id: traefik
name: Traefik Reverse Proxy
slug: traefik
category: infrastructure
tagline: "Automatic HTTPS reverse proxy and load balancer"
description: "Modern reverse proxy and load balancer that automatically discovers your services and provides HTTPS certificates. Perfect for exposing your homelab apps with clean domains instead of IP:port combinations."

icon_url: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/traefik.png"

# Resource requirements
resources:
  min_ram_mb: 128
  min_storage_gb: 1
  recommended_ram_mb: 256
  recommended_storage_gb: 2
  cpu_cores: 1

# Docker compose template
compose_template: |
  version: '3.8'
  services:
    traefik:
      image: traefik:{{.Version}}
      container_name: {{.ContainerName}}
      restart: unless-stopped
      command:
        # Enable Docker provider
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"

        # Entrypoints
        - "--entrypoints.web.address=:80"
        - "--entrypoints.websecure.address=:443"

        # HTTP to HTTPS redirect
        - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
        - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

        {{if .EnableLetsEncrypt}}
        # Let's Encrypt
        - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
        - "--certificatesresolvers.letsencrypt.acme.email={{.Email}}"
        - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
        {{end}}

        # Dashboard
        - "--api.dashboard={{.EnableDashboard}}"
        {{if .EnableDashboard}}
        - "--api.insecure=false"
        {{end}}

      ports:
        - "80:80"
        - "443:443"
        {{if .EnableDashboard}}
        - "{{.DashboardPort}}:8080"
        {{end}}

      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - traefik-certificates:/letsencrypt

      networks:
        - homelab-proxy

      {{if .EnableDashboard}}
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`{{.DashboardDomain}}`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        {{if .EnableLetsEncrypt}}
        - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
        {{end}}
        {{if .DashboardPasswordHash}}
        - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
        - "traefik.http.middlewares.dashboard-auth.basicauth.users={{.DashboardPasswordHash}}"
        {{end}}
      {{end}}

  volumes:
    traefik-certificates:

  networks:
    homelab-proxy:
      name: homelab-proxy
      driver: bridge

# User-configurable options
config_options:
  - name: version
    label: "Traefik Version"
    type: string
    default: "latest"
    required: true
    description: "Traefik Docker image tag"

  - name: container_name
    label: "Container Name"
    type: string
    default: "traefik"
    required: true
    description: "Name for the Docker container"

  - name: enable_lets_encrypt
    label: "Enable Let's Encrypt SSL"
    type: boolean
    default: true
    description: "Automatically obtain and renew SSL certificates"

  - name: email
    label: "Email Address"
    type: string
    default: ""
    required: true
    description: "Email for Let's Encrypt certificate notifications"

  - name: enable_dashboard
    label: "Enable Traefik Dashboard"
    type: boolean
    default: true
    description: "Enable the Traefik web dashboard"

  - name: dashboard_domain
    label: "Dashboard Domain"
    type: string
    default: "traefik.homelab.local"
    required: false
    description: "Domain for accessing the Traefik dashboard"

  - name: dashboard_port
    label: "Dashboard Port (if not using domain)"
    type: number
    default: 8080
    required: false
    description: "Port to expose dashboard on"

  - name: dashboard_username
    label: "Dashboard Username"
    type: string
    default: "admin"
    required: false
    description: "Username for dashboard authentication"

  - name: dashboard_password
    label: "Dashboard Password"
    type: string
    default: ""
    required: false
    description: "Password for dashboard authentication (leave empty to disable auth)"

# Post-deployment instructions
post_deploy_instructions: |
  üéâ Traefik is now running and ready to proxy your apps!

  **Network Created:**
  - `homelab-proxy` network is now available for your apps

  **Dashboard Access:**
  {{if .EnableDashboard}}
  - Dashboard: http://{{.DashboardDomain}}:{{.DashboardPort}}
  {{if .DashboardPassword}}
  - Authentication: Enabled (use the credentials you configured)
  {{else}}
  - ‚ö†Ô∏è WARNING: Dashboard is not password protected! Add authentication in production.
  {{end}}
  {{end}}

  **Next Steps:**
  1. When deploying apps, enable "Proxy Mode" to use Traefik
  2. Apps will automatically get HTTPS certificates{{if .EnableLetsEncrypt}} via Let's Encrypt{{end}}
  3. Access apps via clean domains instead of IP:port

  **Adding Apps to Traefik:**
  Apps deployed through this platform with "Proxy Mode" enabled will automatically:
  - Join the `homelab-proxy` network
  - Get Traefik labels for automatic routing
  - Receive SSL certificates

  **Manual Configuration:**
  To manually add a service, use these labels in your docker-compose:
  ```yaml
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.myapp.rule=Host(`myapp.{{.DashboardDomain}}`)"
    - "traefik.http.routers.myapp.entrypoints=websecure"
    {{if .EnableLetsEncrypt}}
    - "traefik.http.routers.myapp.tls.certresolver=letsencrypt"
    {{end}}
  networks:
    - homelab-proxy
  ```

  **Troubleshooting:**
  - Check logs: `docker logs {{.ContainerName}}`
  - Verify network: `docker network ls | grep homelab-proxy`
  - Dashboard shows all routes and services

# Health check
health_check:
  path: "/ping"
  port: 80
  expected_status: 200
  timeout_seconds: 30
