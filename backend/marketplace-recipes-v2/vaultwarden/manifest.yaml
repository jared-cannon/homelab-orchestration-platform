# Required fields
id: vaultwarden
name: Vaultwarden
version: 1.30.0
slug: vaultwarden
category: security
tagline: "Open source password manager"
description: "Self-hosted Bitwarden-compatible password manager. Lightweight, secure, and feature-complete."

# Branding
author: Vaultwarden Community
website: https://github.com/dani-garcia/vaultwarden
source_code: https://github.com/dani-garcia/vaultwarden

# Resource requirements (intelligent scheduler)
requirements:
  memory:
    minimum: 512MB
    recommended: 1GB
  storage:
    minimum: 1GB
    recommended: 5GB
    type: any  # ssd, hdd, any
  cpu:
    minimum_cores: 1
    recommended_cores: 1
  reliability: high  # high, medium, low
  always_on: true

# Database provisioning (optional - Vaultwarden uses SQLite by default)
database:
  engine: none  # postgres, mysql, mariadb, sqlite, none
  auto_provision: false

# Cache provisioning (optional)
cache:
  engine: none  # redis, memcached, none
  auto_provision: false

# Volume configuration
volumes:
  vaultwarden-data:
    description: User passwords and encrypted data
    size_estimate: 5GB
    backup_priority: high
    backup_frequency: daily

# User-configurable options (shown in deployment wizard)
config_options:
  - name: domain
    label: "Domain"
    type: string
    default: "vault.home"
    required: true
    description: "Domain name for accessing Vaultwarden (e.g., vault.example.com)"

  - name: port
    label: "Port"
    type: number
    default: 8080
    required: true
    description: "External port to expose Vaultwarden on"

  - name: allow_signups
    label: "Allow new user registrations"
    type: boolean
    default: false
    description: "Allow anyone to create an account (recommended: disable after first user)"

  - name: version
    label: "Version"
    type: string
    default: "latest"
    required: true
    description: "Vaultwarden Docker image version"

# Post-deployment automation
post_install:
  - type: message
    title: "Vaultwarden Installed"
    message: |
      Vaultwarden is now running at https://${DOMAIN}

      Next steps:
      1. Create your admin account by visiting the URL
      2. Install browser extensions from https://bitwarden.com/download/
      3. Configure server URL as https://${DOMAIN}
      4. IMPORTANT: Disable signups after creating your account for security

      Admin token: ${ADMIN_TOKEN}

# Health monitoring
health:
  endpoint: /alive
  interval: 30s
  timeout: 10s
  unhealthy_threshold: 3

# Update configuration
updates:
  strategy: manual  # automatic, manual, notify
  backup_before_update: true
  rollback_on_failure: true
